{"version":3,"sources":["redux/store.js","customRouts.js","components/header/Navigation.js","components/header/UserMenu.js","components/header/AuthNav.js","components/header/AppBar.js","App.js","index.js","redux/auth/authOperations.js","redux/auth/authSelectors.js","redux/auth/authSlice.js","redux/contacts/contactsOperations.js","redux/contacts/contactsSelectors.js","redux/contacts/contactsSlice.js"],"names":["middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","rootReducer","combineReducers","auth","persistReducer","authReducer","contacts","contactsReducer","store","configureStore","reducer","devtools","process","persistor","persistStore","PrivateRoute","children","routeProps","isLogIn","useSelector","authSelectors","getIsLogIn","to","PublicRoute","restricted","redirectTo","Navigation","Nav","variant","Item","Link","href","exact","styles","container","display","alignItems","name","fontSize","fontWeight","marginRight","UserMenu","dispatch","useDispatch","getUsername","style","Button","type","onClick","authOperations","logOut","AuthNav","AppBar","isRefreshing","getIsRefreshing","Navbar","collapseOnSelect","bg","expand","HomeView","lazy","LoginView","RegisterView","ContactsView","App","useEffect","refreshCurrentUser","Container","fallback","Spinner","animation","role","path","ReactDOM","render","StrictMode","loading","document","getElementById","axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","a","rejectWithValue","post","data","logIn","_","thunkAPI","state","getState","persistedToken","get","user","initialState","email","authSlice","createSlice","extraReducers","pending","fulfilled","action","payload","rejected","contactsOperations","getAllContacts","addContact","deleteContact","id","delete","updateContact","idForUpdate","patch","contactsSelectors","allContacts","isLoading","error","contactsSlice","push","newContacts","filter","newAllContacts","map","contact","newContact","changeContact"],"mappings":"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","file":"static/js/main.f6c8cc68.chunk.js","sourcesContent":["import {\r\n  combineReducers,\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n} from '@reduxjs/toolkit';\r\n// import logger from \"redux-logger\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { authReducer } from './auth';\r\nimport { contactsReducer } from './contacts';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  // logger,\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: persistReducer(authPersistConfig, authReducer),\r\n  contacts: contactsReducer,\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  devtools: process.env.NODE_ENV === 'development',\r\n  middleware,\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { authSelectors } from './redux/auth';\r\n\r\nexport function PrivateRoute({ children, ...routeProps }) {\r\n  const isLogIn = useSelector(authSelectors.getIsLogIn);\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLogIn ? children : <Redirect to=\"/login\" />}\r\n    </Route>\r\n  );\r\n}\r\n\r\nexport function PublicRoute({\r\n  children,\r\n  restricted = false,\r\n  redirectTo = '/',\r\n  ...routeProps\r\n}) {\r\n  const isLogIn = useSelector(authSelectors.getIsLogIn);\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLogIn && restricted ? <Redirect to={redirectTo} /> : children}\r\n    </Route>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { authSelectors } from 'redux/auth';\r\nimport Nav from 'react-bootstrap/Nav';\r\n\r\nconst Navigation = () => {\r\n  const isLogIn = useSelector(authSelectors.getIsLogIn);\r\n\r\n  return (\r\n    <Nav variant=\"tabs\">\r\n      <Nav.Item>\r\n        <Nav.Link href=\"/\" exact=\"true\">\r\n          HOME\r\n        </Nav.Link>\r\n      </Nav.Item>\r\n\r\n      {isLogIn && (\r\n        <Nav.Item>\r\n          <Nav.Link href=\"/contacts\" exact=\"true\">\r\n            MY CONTACTS\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n      )}\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { authSelectors, authOperations } from 'redux/auth';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  name: {\r\n    fontSize: '1.2em',\r\n    fontWeight: 700,\r\n    marginRight: 15,\r\n  },\r\n};\r\n\r\nexport default function UserMenu() {\r\n  const dispatch = useDispatch();\r\n  const name = useSelector(authSelectors.getUsername);\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <span style={styles.name}>Welcome, {name}</span>\r\n\r\n      <Button\r\n        variant=\"danger\"\r\n        type=\"button\"\r\n        onClick={() => dispatch(authOperations.logOut())}\r\n      >\r\n        Выйти\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Nav from 'react-bootstrap/Nav';\r\n\r\nexport default function AuthNav() {\r\n  return (\r\n    <Nav variant=\"tabs\">\r\n      <Nav.Item>\r\n        <Nav.Link href=\"/register\" exact=\"true\">\r\n          REGISTRATION\r\n        </Nav.Link>\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        <Nav.Link href=\"/login\" exact=\"true\">\r\n          LOG IN\r\n        </Nav.Link>\r\n      </Nav.Item>\r\n    </Nav>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport Navigation from './Navigation';\r\nimport UserMenu from './UserMenu';\r\nimport AuthNav from './AuthNav';\r\nimport { authSelectors } from 'redux/auth';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\n\r\n// const styles = {\r\n//   header: {\r\n//     display: 'flex',\r\n//     justifyContent: 'space-between',\r\n//     alignItems: 'center',\r\n//     borderBottom: '1px solid #2A363B',\r\n//   },\r\n// };\r\n\r\nexport default function AppBar() {\r\n  const isLogIn = useSelector(authSelectors.getIsLogIn);\r\n  const isRefreshing = useSelector(authSelectors.getIsRefreshing);\r\n\r\n  return (\r\n    <Navbar collapseOnSelect variant=\"primary\" bg=\"light\" expand=\"true\">\r\n      <Navigation />\r\n\r\n      {isLogIn && !isRefreshing ? <UserMenu /> : <AuthNav />}\r\n    </Navbar>\r\n  );\r\n}\r\n","import { useEffect, Suspense, lazy } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Switch } from 'react-router-dom';\r\nimport { authOperations, authSelectors } from './redux/auth';\r\nimport { PrivateRoute, PublicRoute } from './customRouts';\r\nimport AppBar from './components/header/AppBar';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\n\r\nconst HomeView = lazy(() => import('./view/HomeView'));\r\nconst LoginView = lazy(() => import('./view/LoginView'));\r\nconst RegisterView = lazy(() => import('./view/RegisterView'));\r\nconst ContactsView = lazy(() => import('./view/ContactsView'));\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const isRefreshing = useSelector(authSelectors.getIsRefreshing);\r\n\r\n  useEffect(() => {\r\n    dispatch(authOperations.refreshCurrentUser());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Container>\r\n      <AppBar />\r\n      {!isRefreshing && (\r\n        <Switch>\r\n          <Suspense\r\n            fallback={\r\n              <Spinner animation=\"border\" variant=\"primary\" role=\"status\" />\r\n            }\r\n          >\r\n            <PublicRoute exact path=\"/\">\r\n              <HomeView />\r\n            </PublicRoute>\r\n            <PublicRoute exact restricted path=\"/register\">\r\n              <RegisterView />\r\n            </PublicRoute>\r\n            <PublicRoute exact restricted redirectTo=\"/contacts\" path=\"/login\">\r\n              <LoginView />\r\n            </PublicRoute>\r\n            <PrivateRoute path=\"/contacts\">\r\n              <ContactsView />\r\n            </PrivateRoute>\r\n          </Suspense>\r\n        </Switch>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\n// import 'bootstrap / dist / css / bootstrap.min.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = createAsyncThunk(\r\n  'auth/register',\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.post('/users/signup', credentials);\r\n      token.set(data.token);\r\n      return data;\r\n    } catch (error) {\r\n      rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nconst logIn = createAsyncThunk(\r\n  'user/login',\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.post('/users/login', credentials);\r\n      token.set(data.token);\r\n      return data;\r\n    } catch (error) {\r\n      rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nconst logOut = createAsyncThunk(\r\n  'users/logout',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      await axios.post('/users/logout');\r\n      token.unset();\r\n    } catch (error) {\r\n      rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nconst refreshCurrentUser = createAsyncThunk(\r\n  'users/refresh',\r\n  async (_, thunkAPI) => {\r\n    const state = thunkAPI.getState();\r\n    const persistedToken = state.auth.token;\r\n\r\n    if (persistedToken === null) {\r\n      return thunkAPI.rejectWithValue();\r\n    }\r\n\r\n    token.set(persistedToken);\r\n\r\n    try {\r\n      const { data } = await axios.get('/users/current');\r\n      return data;\r\n    } catch (error) {\r\n      thunkAPI.rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nconst authOperations = {\r\n  register,\r\n  logOut,\r\n  logIn,\r\n  refreshCurrentUser,\r\n};\r\nexport default authOperations;\r\n","const getIsLogIn = state => state.auth.isLogIn;\r\nconst getUsername = state => state.auth.user.name;\r\nconst getIsRefreshing = state => state.auth.isRefreshing;\r\n\r\nconst authSelectors = {\r\n  getIsLogIn,\r\n  getUsername,\r\n  getIsRefreshing,\r\n};\r\n\r\nexport default authSelectors;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport authOperations from './authOperations';\r\n\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isLogIn: false,\r\n  isRefreshing: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  extraReducers: {\r\n    [authOperations.register.pending]: state => {\r\n      state.isLogIn = initialState.isLogIn;\r\n    },\r\n    [authOperations.register.fulfilled]: (state, action) => {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLogIn = !initialState.isLogIn;\r\n    },\r\n    [authOperations.register.rejected]: state => {\r\n      state.isLogIn = initialState.isLogIn;\r\n    },\r\n\r\n    [authOperations.logIn.pending]: state => {\r\n      state.isLogIn = initialState.isLogIn;\r\n    },\r\n    [authOperations.logIn.fulfilled]: (state, action) => {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLogIn = !initialState.isLogIn;\r\n    },\r\n    [authOperations.logIn.rejected]: state => {\r\n      state.isLogIn = initialState.isLogIn;\r\n    },\r\n\r\n    [authOperations.logOut.pending]: state => {\r\n      state.isLogIn = !initialState.isLogIn;\r\n    },\r\n    [authOperations.logOut.fulfilled]: state => {\r\n      state.user = initialState.user;\r\n      state.token = initialState.token;\r\n      state.isLogIn = initialState.isLogIn;\r\n    },\r\n    [authOperations.logOut.rejected]: state => {\r\n      state.isLogIn = !initialState.isLogIn;\r\n    },\r\n\r\n    [authOperations.refreshCurrentUser.pending]: state => {\r\n      state.isLogIn = initialState.isLogIn;\r\n      state.isRefreshing = !initialState.isRefreshing;\r\n    },\r\n    [authOperations.refreshCurrentUser.fulfilled]: (state, action) => {\r\n      state.user = action.payload;\r\n      state.isLogIn = !initialState.isLogIn;\r\n      state.isRefreshing = initialState.isRefreshing;\r\n    },\r\n    [authOperations.refreshCurrentUser.rejected]: state => {\r\n      state.isLogIn = initialState.isLogIn;\r\n      state.isRefreshing = initialState.isRefreshing;\r\n    },\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;\r\n","import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nconst getAllContacts = createAsyncThunk(\r\n  'contacts/getAllContacts',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.get('/contacts');\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nconst addContact = createAsyncThunk(\r\n  'contacts/addContact',\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.post('/contacts', credentials);\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nconst deleteContact = createAsyncThunk(\r\n  'contacts/deleteContact',\r\n  async (id, { rejectWithValue }) => {\r\n    try {\r\n      await axios.delete(`/contacts/${id}`);\r\n      return id;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nconst updateContact = createAsyncThunk(\r\n  'contacts/update',\r\n  async ({ idForUpdate, credentials }, { rejectWithValue }) => {\r\n    try {\r\n      const id = idForUpdate;\r\n      const { data } = await axios.patch(`/contacts/${id}`, credentials);\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nconst contactsOperations = {\r\n  getAllContacts,\r\n  addContact,\r\n  deleteContact,\r\n  updateContact,\r\n};\r\n\r\nexport default contactsOperations;\r\n","const getAllContacts = state => state.contacts.allContacts;\r\n\r\nconst contactsSelectors = {\r\n  getAllContacts,\r\n};\r\n\r\nexport default contactsSelectors;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport contactsOperations from './contactsOperations';\r\n\r\nconst initialState = {\r\n  allContacts: [],\r\n  isLoading: false,\r\n  error: null,\r\n};\r\n\r\nconst contactsSlice = createSlice({\r\n  name: 'contacts',\r\n  initialState,\r\n  extraReducers: {\r\n    [contactsOperations.getAllContacts.pending](state) {\r\n      state.isLoading = !initialState.isLoading;\r\n    },\r\n    [contactsOperations.getAllContacts.fulfilled](state, action) {\r\n      state.allContacts = action.payload;\r\n      state.isLoading = initialState.isLoading;\r\n    },\r\n\r\n    [contactsOperations.addContact.pending](state) {\r\n      state.isLoading = !initialState.isLoading;\r\n    },\r\n    [contactsOperations.addContact.fulfilled](state, action) {\r\n      state.allContacts.push(action.payload);\r\n      state.isLoading = initialState.isLoading;\r\n    },\r\n\r\n    [contactsOperations.deleteContact.pending](state) {\r\n      state.isLoading = !initialState.isLoading;\r\n    },\r\n    [contactsOperations.deleteContact.fulfilled](state, action) {\r\n      const newContacts = state.allContacts.filter(\r\n        ({ id }) => id !== action.payload,\r\n      );\r\n      state.allContacts = newContacts;\r\n      state.isLoading = initialState.isLoading;\r\n    },\r\n\r\n    [contactsOperations.updateContact.pending](state) {\r\n      state.isLoading = !initialState.isLoading;\r\n    },\r\n    [contactsOperations.updateContact.fulfilled](state, action) {\r\n      const changeContact = (contact, newContact) => {\r\n        if (contact.id === newContact.id) {\r\n          return newContact;\r\n        }\r\n        return contact;\r\n      };\r\n\r\n      const newAllContacts = state.allContacts.map(contact =>\r\n        changeContact(contact, action.payload),\r\n      );\r\n\r\n      state.allContacts = newAllContacts;\r\n      state.isLoading = initialState.isLoading;\r\n    },\r\n  },\r\n});\r\n\r\nexport default contactsSlice.reducer;\r\n"],"sourceRoot":""}